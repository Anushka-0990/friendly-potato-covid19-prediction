# ðŸ˜· COVID-19 Case Prediction using ML

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score

# Load data
df = pd.read_csv("data/covid_19_india.csv")

# Convert date and sort
df['Date'] = pd.to_datetime(df['Date'])
df = df.groupby('Date').sum().reset_index()

# Use Confirmed cases only
df = df[['Date', 'Confirmed']]
df['Day_Count'] = np.arange(len(df))  # Day counter for regression

# Features & Target
X = df[['Day_Count']]
y = df['Confirmed']

# Train-test split
split_idx = int(len(X) * 0.8)
X_train, X_test = X[:split_idx], X[split_idx:]
y_train, y_test = y[:split_idx], y[split_idx:]

# Linear Regression
lr = LinearRegression()
lr.fit(X_train, y_train)
y_pred_lr = lr.predict(X_test)

# Random Forest
rf = RandomForestRegressor()
rf.fit(X_train, y_train)
y_pred_rf = rf.predict(X_test)

# Evaluation
print("Linear RÂ²:", r2_score(y_test, y_pred_lr))
print("Random Forest RÂ²:", r2_score(y_test, y_pred_rf))

# Plot
plt.figure(figsize=(10,5))
plt.plot(df['Date'][split_idx:], y_test.values, label="Actual")
plt.plot(df['Date'][split_idx:], y_pred_lr, label="Linear")
plt.plot(df['Date'][split_idx:], y_pred_rf, label="Random Forest")
plt.title("COVID-19 Confirmed Case Prediction")
plt.xlabel("Date")
plt.ylabel("Confirmed Cases")
plt.legend()
plt.grid(True)
plt.show()
